name: Maven Package and SonarCloud Analysis

on:
  push:
    branches:
      - '**'  # Trigger on all branches
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Configure Maven settings
        run: |
          echo "<settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>" > $GITHUB_WORKSPACE/settings.xml

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #For JavaFX

      - name: Install Xvfb
        run: sudo apt-get install xvfb

      - name: Start Xvfb
        run: Xvfb :99 &

      - name: Build and test with Maven
        run: mvn clean install -Djava.awt.headless=true
        env:
        DISPLAY: ":99"

      - name: Build, test, and analyze with Maven and SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=ervinhun_Belman \
            -Dsonar.organization=ervinhun \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: success()

